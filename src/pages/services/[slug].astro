---
import { fetchServices } from "../../utils/sanityData";
import DetailedComponent from "../../components/DetailComponent";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";

interface Service {
  slug: string;
  title: string;
  description: string;
  images: Array<{ src: string; alt?: string }>;
}

let services: Service[] = [];
try {
  services = await fetchServices();
} catch (error) {
  console.error("Error fetching services:", error);
}

const { slug } = Astro.params;

const service = services.find((s) => s.slug === slug);

if (!service) {
  throw new Error(`Service with slug "${slug}" not found`);
}

export async function getStaticPaths() {
  let services: Service[] = [];
  try {
    services = await fetchServices();
    if (!Array.isArray(services)) {
      throw new Error("Fetched data is not an array");
    }
  } catch (error) {
    console.error("Error fetching services:", error);
    services = [];
  }

  return services.map((service) => ({
    params: { slug: service.slug },
  }));
}
---
<html lang="en">
  <head>
    <title>{service.title}</title>
  </head>
  <body class="font-inter">
   
  <Header />
  <DetailedComponent data={service} client:load />
  <Footer />
</body>
</html>
