
<section class="bg-gray-100 py-12">

    <div class="container mx-auto px-4">
  
      <!-- Section Header -->
  
      <h2 class="text-3xl font-semibold text-center mb-8">
  
        See how we solve <span class="text-gray-500">problems, right on target</span>
  
      </h2>
  
  
  
      <div class="bg-white rounded-lg shadow-lg flex flex-row overflow-hidden" style="height: 400px; width: 900px; margin: 0 auto;">
  
       
  
        <!-- Medtronic Content and Button -->
  
        <div class="p-6 w-1/2 flex flex-col justify-between" style="margin-top: 10px;">
  
          <h3 class="text-xl font-semibold mb-4 ml-1">Medtronic</h3>
  
  
  
          <!-- Content that will move -->
  
          <div class="content-box overflow-hidden">
  
            <p id="content-1" class="text-gray-700 italic mb-6 ml-2">"We have used services from Xurya for most of our stations, this is our strategic step to continue to increase the number of solar panel usage for our stations. We are very satisfied with the services from Xurya."</p>
  
            <p id="content-2" class="text-gray-700 italic mb-6 ml-2 hidden">"Second content that arrives after 10 seconds."</p>
  
            <p id="content-3" class="text-gray-700 italic mb-6 ml-2 hidden">"Third content that arrives after 20 seconds."</p>
  
          </div>
  
         
  
          <!-- Button above author text -->
  
          <div class="mt-2">
  
            <button class="bg-green-500 text-white px-4 py-3 rounded-lg hover:bg-green-600 transition self-start">
  
              View case study
  
            </button>
  
          </div>
  
         
  
          <p class="text-sm text-gray-500 mt-4">
  
            <span class="font-semibold">Jeniffer Kolobaly</span> â€“ CTO EV Medtronic
  
          </p>
  
        </div>
  
  
  
        <!-- Image Content -->
  
        <div class="w-[45%] flex items-center">
  
          <img
  
            src="https://via.placeholder.com/400x300"
  
            alt="Case Study Image"
  
            class="w-full h-auto object-cover rounded-r-lg"
  
          />
  
        </div>
  
  
  
      </div>
  
  
  
      <!-- Progress Bar -->
  
      <div class="flex justify-center items-center mt-8 space-x-8">
  
        <!-- Each progress bar and label pair -->
  
        <div class="flex flex-col items-center">
  
          <div id="progress-bar-1" class="h-1 w-full bg-gray-300 max-w-[200px] rounded-lg"></div> <!-- Horizontal size with border-radius -->
  
          <span class="text-sm text-gray-500 mt-2">Electric car charging station</span>
  
        </div>
  
        <div class="flex flex-col items-center">
  
          <div id="progress-bar-2" class="h-1 w-full bg-gray-300 max-w-[200px] rounded-lg"></div> <!-- Horizontal size with border-radius -->
  
          <span class="text-sm text-gray-500 mt-2">Residential solar panels</span>
  
        </div>
        <div class="flex flex-col items-center">
  
          <div id="progress-bar-3" class="h-1 w-full bg-gray-300 max-w-[200px] rounded-lg"></div>
          
          <!-- Horizontal size with border-radius -->
          <span class="text-sm text-gray-500 mt-2">Wind power for industry</span>
        </div>
      </div>
  
    </div>
  
    <script>
  
      let currentIndex = 0;
  
      const progressBars = [
  
        document.getElementById('progress-bar-1'),
        document.getElementById('progress-bar-2'),
        document.getElementById('progress-bar-3'),
  
      ];
      const contentElements = [
  
        document.getElementById('content-1'),
        document.getElementById('content-2'),
        document.getElementById('content-3'),
  
      ];
  
       // Function to reset all progress bars
  
      function resetProgressBars() {
  
        progressBars.forEach(bar => {
  
          if (bar) {
  
            bar.style.transition = 'none'; // Disable transition while resetting
  
            bar.style.width = '0%';  // Reset width to 0
          }
        });
      }
  
      // Function to start the progress bar animation
  
      function startProgressBar() {
  
        const currentProgressBar = progressBars[currentIndex];
  
        // Set timeout for starting the progress bar animation
        setTimeout(() => {
  
          if (currentProgressBar) {
  
            currentProgressBar.style.transition = 'width 10s ease-in-out'; // Enable smooth transition
  
            currentProgressBar.style.width = '100%'; // Fill the progress bar in 10 seconds
  
          }
        }, 100); // Delay to ensure initial reset
  
      }
      // Function to cycle through content and progress bars
  
      function cycleContent() {
  
        // Hide all content
  
        contentElements.forEach((content, index) => {
  
          if (content) {
  
            if (index === currentIndex) {
  
              content.classList.remove('hidden'); // Show the current content
            } else {
  
            content.classList.add('hidden'); // Hide other content
            }
          }
        });
  
  
        // Reset and start progress bar animation
  
        resetProgressBars();
        startProgressBar();
  
        // Move to the next index, and loop back to the start
        currentIndex = (currentIndex + 1) % 3;
      }
      // Initial content display
             cycleContent();
      // Set interval to switch content every 10 seconds
      setInterval(cycleContent, 10000);
    </script>
  </section>